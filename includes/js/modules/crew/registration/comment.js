var CommentModel=Backbone.Model.extend({idAttribute:"id",url:function(){if(this.isNew()){return BASE_URL+"api/crew_comment"}else{return BASE_URL+"api/crew_comment/id/"+this.get("id")}},defaults:{crew_id:0,description:""}});var CommentMasterView=Backbone.View.extend({el:$("#comment-info"),initialize:function(){$(".sortcolumn").css("cursor","pointer");this.collection.isLoading=false;this.collection.on("add",this.renderCommentView,this);this.collection.on("add",this.renderCommentForm,this);this.collection.on("reset",this.render,this);this.collection.on("fetch",function(){this.collection.isLoading=true;$("#loader-container").html('<img src="'+BASE_URL+'includes/img/ajax-loader.gif" />')},this);if(this.collection.size()==0){e_model=new CommentModel({title:"",crew_id:"",description:""});this.collection.push(e_model);this.$el.find(".btn-group").hide()}this.showStatus()},events:{"click .sortcolumn":"updateSortBy","click #comment_add-btn":"addComment"},addComment:function(b){b.preventDefault();var a=this;$("#addComment").live("show",function(){$(this).find(".btn-success").die().live("click",function(){var c=Array;$.map($(".inopts input, .inopts textarea, .inopts select").serializeArray(),function(e,d){c[e.name]=e.value});options=new CommentModel();options.save(c,{success:function(e,d){this.$el=$("#addComment");this.$el.modal("hide");a.showStatus();alert=new AlertCommentView({type:"success",message:"New record successfully added."});alert.render()},error:function(e,d){alert=new AlertCommentView({type:"error",message:d});alert.render()}})})}).modal()},updateSortBy:function(a){if(this.collection.sortDir=="desc"){dir="asc"}else{dir="desc"}this.collection.sortDir=String(dir);this.collection.updateOrder($(a.target).attr("col"))},showStatus:function(b){var a=this.collection;a.currentPage=0;a.pager()},render:function(){var a=this;this.collection.isLoading=false;if(this.collection.size()!=0){$("#options-table-comment tbody").empty()}this.collection.each(this.renderCommentView,this);this.collection.each(this.renderCommentForm,this)},renderCommentView:function(b){var a=new CommentView({model:b,collection:this.collection});$("#options-table-comment tbody").append(a.render().el)},renderCommentForm:function(a){var b=new CommentForm({model:a});$("#container-comment-add").append(b.render().el)}});var AlertCommentView=Backbone.View.extend({el:$("#alertComment-div"),template:$("#alertCommentTemplate").html(),render:function(){var a=_.template(this.template);var b=Array;b.type=this.options.type;b.message=this.options.message;this.$el.html(a(b));return this}});var CommentView=Backbone.View.extend({tagName:"tr",template:$("#comment-list-item").html(),editTemplate:_.template($("#option-edit-comment").html()),events:{"click .record-delete":"confirmDelete","click .record-edit":"editComment"},editComment:function(b){b.preventDefault();this.$el=$("#container-comment-edit");var a=this;this.$el.empty();this.$el.html(this.editTemplate(this.model.toJSON()));$("#editComment").live("show",function(){$(this).find(".btn-primary").die().live("click",function(){var c=Array;$.map($(".inopts input, .inopts textarea, .inopts select").serializeArray(),function(e,d){c[e.name]=e.value});a.model.save(c,{success:function(e,d){a.showStatus();this.$el=$("#editComment");this.$el.modal("hide");alert=new AlertCommentView({type:"success",message:"Record successfully updated"});alert.render()},error:function(e,d){alert=new AlertCommentView({type:"error",message:d});alert.render()}})})}).modal()},showStatus:function(b){var a=this.collection;a.currentPage=0;a.pager()},confirmDelete:function(b){b.preventDefault();var a=this;$("#deleteComment").live("show",function(){$(this).find(".btn-danger").die().live("click",function(){a.model.destroy({success:function(d,c){a.remove()}})})}).modal()},render:function(){var a=_.template(this.template);this.$el.html(a(this.model.toJSON()));return this}});var CommentForm=Backbone.View.extend({template:$("#container-comment-add"),addTemplate:_.template($("#option-add-comment").html()),render:function(){this.template.empty();this.template.html(this.addTemplate(this.model.toJSON()));return this}});var CommentCollection=Backbone.Paginator.requestPager.extend({model:CommentModel,crew_id:0,paginator_core:{type:"GET",dataType:"json",url:BASE_URL+"api/crew_comments?"},paginator_ui:{firstPage:1,currentPage:1,perPage:5,sortField:"id",sortDir:"asc",searchField:null,searchVal:null,totalPages:10},server_api:{crew_id:function(){return this.crew_id},limit:function(){return this.perPage},offset:function(){if(this.currentPage==0){this.currentPage=1}return(this.currentPage-1)*this.perPage},sort:function(){return this.sortField},order:function(){return this.sortDir},searchField:function(){return this.searchField},searchVal:function(){return this.searchVal}},parse:function(a){var b=a.data;this.totalPages=Math.floor(a._count/this.perPage);this.totalRecords=a._count;return b}});var CommentPaginatedView=Backbone.View.extend({events:{"click a.servernext":"nextResultPage","click a.serverprevious":"previousResultPage","click a.orderUpdate":"updateSortBy","click a.serverlast":"gotoLast","click a.page":"gotoPage","click a.serverfirst":"gotoFirst","click a.serverpage":"gotoPage","click .serverhowmany a":"changeCount"},tagName:"aside",template:_.template($("#tmpServerPagination").html()),initialize:function(){this.collection.on("reset",this.render,this);this.collection.on("change",this.render,this);this.$el.appendTo("#commentpagination")},render:function(){var a=this.template(this.collection.info());this.$el.html(a)},updateSortBy:function(b){b.preventDefault();var a=$("#sortByField").val();this.collection.updateOrder(a)},nextResultPage:function(a){a.preventDefault();this.collection.requestNextPage()},previousResultPage:function(a){a.preventDefault();this.collection.requestPreviousPage()},gotoFirst:function(a){a.preventDefault();this.collection.goTo(this.collection.information.firstPage)},gotoLast:function(a){a.preventDefault();this.collection.goTo(this.collection.information.lastPage)},gotoPage:function(b){b.preventDefault();var a=$(b.target).text();this.collection.goTo(a)},changeCount:function(b){b.preventDefault();var a=$(b.target).text();this.collection.howManyPer(a)}});